@page "/editsymptom"
@page "/editsymptom/{Id:int}"
@inject ISymptomService SymptomService
@inject NavigationManager NavigationManager
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@rendermode @(new InteractiveServerRenderMode(prerender: false))


@if (Id is null)
{
    <PageTitle>Edit Symptom</PageTitle>
    <h3>Loading form...</h3>
}

else
{
    <PageTitle>Edit "@CurrentSymptom.SymptomName"</PageTitle>
    <h3>Edit Symptom</h3>

<EditForm Model="CurrentSymptom" OnSubmit="HandleSubmit">
<DataAnnotationsValidator />
        <div>
        <label for="symptomName">Symptom Name</label>
        <InputText id="symptomName" class="form-control" @bind-Value="CurrentSymptom.SymptomName"></InputText>
        <ValidationMessage For="@(() => CurrentSymptom.SymptomName)" />
    </div>

    <div>
        <label for="date">Date</label>
        <InputDate id="date" class="form-control" @bind-Value="CurrentSymptom.Date"></InputDate>
        <ValidationMessage For="@(() => CurrentSymptom.Date)" />
    </div>

    <div>
        <label for="painLevel">Pain Level</label>
        <InputNumber id="painLevel" class="form-control" @bind-Value="CurrentSymptom.PainLevel"></InputNumber>
        <ValidationMessage For="@(() => CurrentSymptom.PainLevel)" />
    </div>

    <div>
        <label for="activity">Activity</label>
        <InputText id="activity" class="form-control" @bind-Value="CurrentSymptom.Activity"></InputText>
        <ValidationMessage For="@(() => CurrentSymptom.Activity)" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>

</EditForm>

}

@code {
    [Parameter]
    public int? Id { get; set; }

    public Symptom CurrentSymptom { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var symptom = await SymptomService.GetSymptomByIdAsync((int)Id);
            if (symptom is not null)
            {
                CurrentSymptom = symptom;
            }
        }
    }

    async Task HandleSubmit()
    {
        if (Id is not null)
        {
            await SymptomService.UpdateSymptomAsync(CurrentSymptom, (int)Id);
            NavigationManager.NavigateTo("symptomlist");
        }
        else
        {
            await SymptomService.AddSymptomAsync(CurrentSymptom);
            NavigationManager.NavigateTo("/symptomlist");
        }
    }
}
